import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –¢–≤–æ–π —Ç–æ–∫–µ–Ω –∏ ID
TOKEN = "7761909906:AAGMeo-NH4RCwoQe_ruY2kwuORVxgLLhIoo"
ADMIN_ID = 1402620870  # Telegram ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
import logging
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN, parse_mode="HTML")
dp = Dispatcher(bot)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="üì© –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")]],
    resize_keyboard=True
)

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, –∏ —è –ø–µ—Ä–µ–¥–∞–º –µ—ë –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "üì© –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
async def request_application(message: types.Message):
    await message.answer("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –∑–∞—è–≤–∫—É (–æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å).")

@dp.message_handler()
async def receive_application(message: types.Message):
    username = f"@{message.from_user.username}" if message.from_user.username else f"ID: {message.from_user.id}"
    text = f"üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç {username}:\n\n{message.text}"
    await bot.send_message(ADMIN_ID, text)
    await message.answer("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")

async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling()

if __name__ == "__main__":
    asyncio.run(main())  # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
